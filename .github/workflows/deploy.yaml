name: Deploy Airflow

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Restaurar kubeconfig via secret
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 -d > ~/.kube/config
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

      - name: Instalar yq local (caso necess√°rio)
        run: |
          if ! command -v yq &> /dev/null; then
            echo "Instalando yq local..."
            curl -L https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o ./yq
            chmod +x ./yq
            echo "$(pwd)" >> $GITHUB_PATH
          fi

      - name: Atualizar airflow.extraPipPackages com requirements.txt
        run: |
          echo "üîÑ Gerando bloco extraPipPackages com requirements.txt"
          echo "airflow:" > airflow-temp.yaml
          echo "  extraPipPackages: |" >> airflow-temp.yaml
          sed 's/^/    /' requirements.txt >> airflow-temp.yaml

          ./yq eval-all 'select(fileIndex == 0) * select(fileIndex == 1)' ./helm/airflow/values.yaml airflow-temp.yaml > ./helm/airflow/values.final.yaml
          mv ./helm/airflow/values.final.yaml ./helm/airflow/values.yaml

      - name: üì¶ Garantir PVC airflow-logs
        run: |
          echo "üì¶ Aplicando PVC airflow-logs"
          kubectl apply -f ./helm/airflow/airflow-logs-pvc.yaml --insecure-skip-tls-verify

      - name: ‚è±Ô∏è Aguardar PVC airflow-logs ficar Bound
        run: |
          echo "‚è±Ô∏è Aguardando PVC airflow-logs ficar Bound..."
          for i in {1..36}; do
            STATUS=$(kubectl get pvc airflow-logs -n airflow -o jsonpath='{.status.phase}' --insecure-skip-tls-verify)
            echo "Tentativa $i: status=$STATUS"
            if [ "$STATUS" == "Bound" ]; then
              echo "‚úÖ PVC airflow-logs est√° Bound"
              exit 0
            fi
            sleep 5
          done
          echo "‚ö†Ô∏è Timeout: PVC airflow-logs n√£o ficou Bound ap√≥s 180s"
          exit 1
      

      - name: Criar configMap com airflow.cfg personalizado
        run: |
          echo "üì¶ Criando configMap com airflow.cfg"
          kubectl create configmap airflow-config-custom \
            --from-file=airflow.cfg=./helm/airflow/config/airflow.cfg \
            --namespace airflow \
            --dry-run=client -o yaml | kubectl apply -f - --insecure-skip-tls-verify

      - name: Adicionar reposit√≥rio Helm do Apache Airflow
        run: |
          helm repo add apache-airflow https://airflow.apache.org || true
          helm repo update

      - name: Executar Helm upgrade (ou fallback para instala√ß√£o limpa)
        run: |
          set -e
          echo "‚ñ∂ Tentando upgrade..."
          if ! helm upgrade --install airflow apache-airflow/airflow \
            --namespace airflow \
            --create-namespace \
            -f ./helm/airflow/values.yaml \
            --kube-insecure-skip-tls-verify; then
              echo "‚ö†Ô∏è Helm upgrade falhou. Recriando..."
              helm uninstall airflow -n airflow || true
              kubectl delete pvc -l release=airflow -n airflow --insecure-skip-tls-verify || true
              helm install airflow apache-airflow/airflow \
                --version 1.13.0 \
                --namespace airflow \
                --create-namespace \
                -f ./helm/airflow/values.yaml \
                --kube-insecure-skip-tls-verify
          fi

      - name: Verificar status dos pods
        run: |
          kubectl get pods -n airflow -o wide --insecure-skip-tls-verify
