executor: KubernetesExecutor

config:
  existingAirflowCfgConfigMap:
    name: airflow-config-custom
    key: airflow.cfg

images:
  airflow:
    repository: apache/airflow
    tag: 3.0.0-python3.11
    pullPolicy: IfNotPresent

dags:
  gitSync:
    enabled: true
    repo: https://github.com/kalebeasilvadev/airflow-project.git
    branch: main
    subPath: dags
    depth: 1

airflow:
  config:
    AIRFLOW__KUBERNETES__DELETE_WORKER_PODS: "True"
    AIRFLOW__KUBERNETES__NAMESPACE: "airflow"
    AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY: apache/airflow
    AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG: 3.0.0-python3.11

  extraPipPackages: |
    apache-airflow-providers-postgres
    pandas
    requests

logs:
  persistence:
    enabled: true
    size: 4Gi
    storageClassName: local-path
    accessMode: ReadWriteOnce

webserver:
  defaultUser:
    enabled: true
    username: admin
    password: admin
  nodeSelector:
    kubernetes.io/hostname: airflow
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                  - airflow
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1.5Gi

scheduler:
  nodeSelector:
    kubernetes.io/hostname: airflow
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                  - airflow
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1Gi

triggerer:
  nodeSelector:
    kubernetes.io/hostname: airflow
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                  - airflow
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

workers:
  nodeSelector:
    kubernetes.io/hostname: airflow
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                  - airflow
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1Gi

postgresql:
  enabled: true
  primary:
    nodeSelector:
      kubernetes.io/hostname: airflow
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - airflow
    persistence:
      enabled: true
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1
        memory: 1Gi
    containerSecurityContext:
      runAsUser: 1001
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault

statsd:
  nodeSelector:
    kubernetes.io/hostname: airflow
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                  - airflow

ingress:
  enabled: true
  web:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
    ingressClassName: traefik
    tls:
      enabled: false
